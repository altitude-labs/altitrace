{"openapi":"3.1.0","info":{"title":"Altitrace API","description":"REST API for the Altitrace API","version":"1.0.0"},"servers":[{"url":"http://localhost:8080/v1","description":"API v1"}],"paths":{"/simulate":{"post":{"tags":["simulation"],"summary":"Simulate transaction execution","description":"Simulate a single transaction with comprehensive analysis","operationId":"simulate_transaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimulationRequest"}}},"required":true},"responses":{"200":{"description":"Simulation completed (success or failure)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_SimulationResult"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}}}}},"/simulate/batch":{"post":{"tags":["simulation"],"summary":"Simulate multiple independent transactions","description":"Simulate a batch of independent transactions with comprehensive analysis","operationId":"simulate_batch_transaction","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SimulationRequest"}}}},"required":true},"responses":{"200":{"description":"Batch simulation completed (includes individual success/failure)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_Vec_SimulationResult"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}}}}},"/status/healthcheck":{"get":{"tags":["health"],"summary":"Check the health of the API","description":"Check the health of the API","operationId":"check_health","responses":{"200":{"description":"Health check successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_HealthStatus"}}}},"500":{"description":"Health check failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}}}}},"/trace/call":{"get":{"tags":["trace"],"summary":"Get a transaction trace from a call request","description":"Get a transaction trace from a call request.","operationId":"trace_call","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TraceCallRequest"}}},"required":true},"responses":{"200":{"description":"Trace completed (success or failure)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_TracerResponse"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}}}}},"/trace/tx":{"get":{"tags":["trace"],"summary":"Traces a single transaction execution","description":"Traces a single transaction execution.","operationId":"trace_transaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TraceTransactionRequest"}}},"required":true},"responses":{"200":{"description":"Trace completed (success or failure)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_TracerResponse"}}}},"400":{"description":"Invalid request parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse_String"}}}}}}}},"components":{"schemas":{"AccountState":{"type":"object","description":"Represents the state of an account.","properties":{"balance":{"type":["string","null"],"description":"Account balance in wei (hex-encoded)","example":"0x1bc16d674ec80000"},"code":{"type":["string","null"],"description":"Account bytecode (hex-encoded)","example":"0x608060405234801561001057600080fd5b50"},"nonce":{"type":["integer","null"],"format":"int64","description":"Account nonce","example":42,"minimum":0},"storage":{"type":"object","description":"Account storage slots (key-value pairs, both hex-encoded)","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}}}},"ApiError":{"type":"object","description":"Detailed error information for failed requests.","required":["code","message"],"properties":{"code":{"type":"string","description":"Machine-readable error code for programmatic handling.","example":"INVALID_TRANSACTION"},"details":{"description":"Additional structured error details."},"message":{"type":"string","description":"Human-readable error message.","example":"Transaction validation failed"},"suggestion":{"type":["string","null"],"description":"Suggested resolution or workaround for the error."},"trace":{"type":["string","null"],"description":"Stack trace for debugging (only in debug builds)."}}},"ApiResponse_HealthStatus":{"type":"object","description":"Standard API response wrapper for all simulation endpoints.\n\nThis provides a consistent response format across the API,\nincluding success/failure indication, data payload, error information,\nand request metadata for tracking and debugging.","required":["success","metadata"],"properties":{"data":{"type":"object","required":["status","version","uptime","cache"],"properties":{"cache":{"$ref":"#/components/schemas/CacheHealth"},"status":{"type":"string"},"uptime":{"type":"integer","format":"int64","minimum":0},"version":{"type":"string"}}},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ApiError","description":"Error information (present only on failed requests)."}]},"metadata":{"$ref":"#/components/schemas/ResponseMetadata","description":"Request metadata and timing information."},"success":{"type":"boolean","description":"Indicates whether the request was processed successfully.","example":true}}},"ApiResponse_SimulationResult":{"type":"object","description":"Standard API response wrapper for all simulation endpoints.\n\nThis provides a consistent response format across the API,\nincluding success/failure indication, data payload, error information,\nand request metadata for tracking and debugging.","required":["success","metadata"],"properties":{"data":{"type":"object","description":"Complete simulation result containing all execution details.\n\nThis is the main response structure for transaction simulation,\ncontaining execution status, gas usage, logs, traces, and any errors.","required":["simulationId","blockNumber","status","calls","gasUsed","blockGasUsed"],"properties":{"assetChanges":{"type":["array","null"],"items":{"$ref":"#/components/schemas/AssetChange"},"description":"Token balance changes (if tracing enabled)."},"blockGasUsed":{"type":"string","description":"Total gas used in the simulated block.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"blockNumber":{"type":"string","description":"The final block number after simulation (higher than input if new blocks created).","example":"0x123abd","pattern":"^0x[a-fA-F0-9]+$"},"calls":{"type":"array","items":{"$ref":"#/components/schemas/CallResult"},"description":"Results for each transaction call in the simulation."},"gasUsed":{"type":"string","description":"Total gas consumed by all calls.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"simulationId":{"type":"string","description":"Unique identifier for this simulation."},"status":{"$ref":"#/components/schemas/SimulationStatus","description":"Overall simulation execution status."}}},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ApiError","description":"Error information (present only on failed requests)."}]},"metadata":{"$ref":"#/components/schemas/ResponseMetadata","description":"Request metadata and timing information."},"success":{"type":"boolean","description":"Indicates whether the request was processed successfully.","example":true}}},"ApiResponse_String":{"type":"object","description":"Standard API response wrapper for all simulation endpoints.\n\nThis provides a consistent response format across the API,\nincluding success/failure indication, data payload, error information,\nand request metadata for tracking and debugging.","required":["success","metadata"],"properties":{"data":{"type":"string"},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ApiError","description":"Error information (present only on failed requests)."}]},"metadata":{"$ref":"#/components/schemas/ResponseMetadata","description":"Request metadata and timing information."},"success":{"type":"boolean","description":"Indicates whether the request was processed successfully.","example":true}}},"ApiResponse_TracerResponse":{"type":"object","description":"Standard API response wrapper for all simulation endpoints.\n\nThis provides a consistent response format across the API,\nincluding success/failure indication, data payload, error information,\nand request metadata for tracking and debugging.","required":["success","metadata"],"properties":{"data":{"type":"object","description":"Container for all tracer results.","properties":{"4byteTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/FourByteResponse","description":"Four byte tracer results."}]},"callTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/CallTraceResponse","description":"Call tracer results."}]},"prestateTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/PrestateTraceResponse","description":"Prestate tracer results."}]},"receipt":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/TransactionReceiptInfo","description":"The transaction receipt."}]},"structLogger":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/StructLogResponse","description":"Struct logger results."}]}}},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ApiError","description":"Error information (present only on failed requests)."}]},"metadata":{"$ref":"#/components/schemas/ResponseMetadata","description":"Request metadata and timing information."},"success":{"type":"boolean","description":"Indicates whether the request was processed successfully.","example":true}}},"ApiResponse_Vec_SimulationResult":{"type":"object","description":"Standard API response wrapper for all simulation endpoints.\n\nThis provides a consistent response format across the API,\nincluding success/failure indication, data payload, error information,\nand request metadata for tracking and debugging.","required":["success","metadata"],"properties":{"data":{"type":"array","items":{"type":"object","description":"Complete simulation result containing all execution details.\n\nThis is the main response structure for transaction simulation,\ncontaining execution status, gas usage, logs, traces, and any errors.","required":["simulationId","blockNumber","status","calls","gasUsed","blockGasUsed"],"properties":{"assetChanges":{"type":["array","null"],"items":{"$ref":"#/components/schemas/AssetChange"},"description":"Token balance changes (if tracing enabled)."},"blockGasUsed":{"type":"string","description":"Total gas used in the simulated block.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"blockNumber":{"type":"string","description":"The final block number after simulation (higher than input if new blocks created).","example":"0x123abd","pattern":"^0x[a-fA-F0-9]+$"},"calls":{"type":"array","items":{"$ref":"#/components/schemas/CallResult"},"description":"Results for each transaction call in the simulation."},"gasUsed":{"type":"string","description":"Total gas consumed by all calls.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"simulationId":{"type":"string","description":"Unique identifier for this simulation."},"status":{"$ref":"#/components/schemas/SimulationStatus","description":"Overall simulation execution status."}}}},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/ApiError","description":"Error information (present only on failed requests)."}]},"metadata":{"$ref":"#/components/schemas/ResponseMetadata","description":"Request metadata and timing information."},"success":{"type":"boolean","description":"Indicates whether the request was processed successfully.","example":true}}},"AssetChange":{"type":"object","description":"Token balance change information.","required":["token","value"],"properties":{"token":{"$ref":"#/components/schemas/TokenInfo","description":"Token contract information."},"value":{"$ref":"#/components/schemas/BalanceChange","description":"Balance change details."}}},"BalanceChange":{"type":"object","description":"Balance change information showing before/after/difference.","required":["pre","post","diff"],"properties":{"diff":{"type":"string","description":"Net change (post - pre, hex encoded).\nPositive means gained, negative means lost.","example":"0xf4240","pattern":"^0x[a-fA-F0-9]*$"},"post":{"type":"string","description":"Balance after simulation (hex encoded, smallest unit).","example":"0x1e8480","pattern":"^0x[a-fA-F0-9]*$"},"pre":{"type":"string","description":"Balance before simulation (hex encoded, smallest unit).","example":"0xf4240","pattern":"^0x[a-fA-F0-9]*$"}}},"BlockOverrides":{"type":"object","description":"Block environment overrides for simulation.\n\nThese overrides allow modifying the block context in which the simulation runs,\nincluding block number, timestamp, gas parameters, and more.","properties":{"baseFee":{"type":["string","null"],"description":"Override the base fee per gas (EIP-1559).","example":"0x3b9aca00","pattern":"^0x[a-fA-F0-9]*$"},"blockHash":{"type":["object","null"],"description":"Custom block hash mappings for the BLOCKHASH opcode.\nMaps block numbers to their corresponding block hashes.","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}},"coinbase":{"type":["string","null"],"description":"Override the block coinbase (miner/fee recipient).","example":"0x0000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{40}$"},"difficulty":{"type":["string","null"],"description":"Override the block difficulty (pre-merge chains).","example":"0x0","pattern":"^0x[a-fA-F0-9]*$"},"gasLimit":{"type":["integer","null"],"format":"int64","description":"Override the block gas limit.","example":30000000,"minimum":0},"number":{"type":["string","null"],"description":"Override the block number.\nFor `eth_simulateV1`, this will be the first simulated block number.\nNote: Different clients use different field names (geth: \"number\", erigon: \"blockNumber\").","example":"0x1234567","pattern":"^0x[a-fA-F0-9]*$"},"random":{"type":["string","null"],"description":"Override the prevRandao value (post-merge).\nThis replaces the difficulty field in post-merge chains.","example":"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef","pattern":"^0x[a-fA-F0-9]{64}$"},"time":{"type":["integer","null"],"format":"int64","description":"Override the block timestamp (Unix timestamp in seconds).\nNote: Different clients use different field names (geth: \"time\", erigon: \"timestamp\").","example":1700000000,"minimum":0}},"additionalProperties":false},"BlockTag":{"type":"string","description":"Block tag options for specifying block context.","enum":["latest","earliest","safe","finalized"],"example":"latest"},"CacheHealth":{"type":"object","required":["status","latency_ms"],"properties":{"latency_ms":{"type":"integer","format":"int64","minimum":0},"status":{"type":"string"}}},"CallError":{"type":"object","description":"Detailed error information for failed or reverted calls.","required":["reason","errorType"],"properties":{"contractAddress":{"type":["string","null"],"description":"Contract address where the error occurred."},"errorType":{"type":"string","description":"Error type classification.","example":"execution-reverted"},"message":{"type":["string","null"],"description":"Detailed error message with context."},"reason":{"type":"string","description":"Human-readable error reason.","example":"Insufficient balance"}}},"CallFrame":{"type":"object","description":"Individual call frame in the call trace.","required":["callType","from","value","gas","gasUsed","input","output","depth","reverted"],"properties":{"callType":{"type":"string","description":"Call type (CALL, DELEGATECALL, STATICCALL, CREATE, etc.).","example":"CALL"},"calls":{"type":"array","items":{"$ref":"#/components/schemas/CallFrame"},"description":"Sub-calls made by this call."},"depth":{"type":"integer","format":"int32","description":"Call depth.","minimum":0},"error":{"type":["string","null"],"description":"Error message if call failed."},"from":{"type":"string","description":"Sender address.","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c"},"gas":{"type":"string","description":"Gas provided to the call.","example":"0x7a120"},"gasUsed":{"type":"string","description":"Gas used by the call.","example":"0x5208"},"input":{"type":"string","description":"Input data (hex-encoded).","example":"0xa9059cbb"},"logs":{"type":"array","items":{"$ref":"#/components/schemas/LogEntry"},"description":"Logs emitted by this call."},"output":{"type":"string","description":"Output data (hex-encoded).","example":"0x01"},"revertReason":{"type":["string","null"],"description":"Revert reason if available."},"reverted":{"type":"boolean","description":"Whether the call reverted."},"to":{"type":["string","null"],"description":"Recipient address.","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"value":{"type":"string","description":"Value transferred (hex-encoded wei).","example":"0x0"}}},"CallResult":{"type":"object","description":"Result of a single transaction call within the simulation.","required":["callIndex","status","returnData","gasUsed","logs"],"properties":{"callIndex":{"type":"integer","format":"int32","description":"Index of this call within the simulation.","minimum":0},"error":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/CallError","description":"Error details (present if call failed or reverted)."}]},"gasUsed":{"type":"string","description":"Gas consumed by this call.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"logs":{"type":"array","items":{"$ref":"#/components/schemas/EnhancedLog"},"description":"Event logs emitted by this call."},"returnData":{"type":"string","description":"Data returned by the call (hex encoded).","example":"0x0000000000000000000000000000000000000000000000000000000000000001","pattern":"^0x[a-fA-F0-9]*$"},"status":{"$ref":"#/components/schemas/CallStatus","description":"Execution status of this specific call."}}},"CallStatus":{"type":"string","description":"Execution status for individual calls.","enum":["success","reverted"],"example":"success"},"CallTraceResponse":{"type":"object","description":"Call tracer result with hierarchical call structure.","required":["rootCall","totalCalls","maxDepth"],"properties":{"maxDepth":{"type":"integer","format":"int32","description":"Maximum call depth.","minimum":0},"rootCall":{"$ref":"#/components/schemas/CallFrame","description":"Root call frame."},"totalCalls":{"type":"integer","format":"int64","description":"Total number of calls.","minimum":0}}},"CallTracerConfig":{"type":"object","properties":{"onlyTopCall":{"type":"boolean","description":"Only trace the top-level call.","default":false},"withLogs":{"type":"boolean","description":"Include event logs in call frames.","default":true}}},"DecodedEvent":{"type":"object","description":"Human-readable event information decoded from log data.","required":["name","signature","description","params","summary"],"properties":{"description":{"type":"string","description":"Human-readable description of the event.","example":"Token transfer event"},"name":{"type":"string","description":"Event name (e.g., \"Transfer\", \"Approval\").","example":"Transfer"},"params":{"type":"array","items":{"$ref":"#/components/schemas/DecodedEventParam"},"description":"Decoded event parameters with names and formatted values."},"signature":{"type":"string","description":"Event signature with types.","example":"Transfer(address,address,uint256)"},"standard":{"type":["string","null"],"description":"Token/protocol standard (e.g., \"ERC20\", \"ERC721\", \"Uniswap V2\").","example":"ERC20"},"summary":{"type":"string","description":"One-line human-readable summary.","example":"Transfer 1000.0 USDC from 0x742d... to 0xabc1..."}}},"DecodedEventParam":{"type":"object","description":"Individual parameter from a decoded event.","required":["name","paramType","value","indexed"],"properties":{"indexed":{"type":"boolean","description":"Whether this parameter was indexed in the event."},"name":{"type":"string","description":"Parameter name from the ABI.","example":"from"},"paramType":{"type":"string","description":"Parameter type (e.g., \"address\", \"uint256\", \"bool\").","example":"address"},"value":{"type":"string","description":"Formatted parameter value.","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c"}}},"EnhancedLog":{"type":"object","description":"Event log with optional decoded information for better readability.","required":["address","data","topics","removed"],"properties":{"address":{"type":"string","description":"Contract address that emitted this log.","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","pattern":"^0x[a-fA-F0-9]{40}$"},"blockHash":{"type":["string","null"],"description":"Block hash containing this log (null for simulations)."},"blockNumber":{"type":["string","null"],"description":"Block number containing this log."},"data":{"type":"string","description":"Raw log data (hex encoded).","example":"0x00000000000000000000000000000000000000000000000000000000000f4240"},"decoded":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/DecodedEvent","description":"Human-readable decoded event information (if available)."}]},"logIndex":{"type":["string","null"],"description":"Log index within the transaction."},"removed":{"type":"boolean","description":"Whether this log was removed due to chain reorganization."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of indexed log topics."},"transactionHash":{"type":["string","null"],"description":"Transaction hash that created this log (null for simulations)."},"transactionIndex":{"type":["string","null"],"description":"Transaction index within the block (null for simulations)."}}},"FourByteInfo":{"type":"object","required":["dataSize","count"],"properties":{"count":{"type":"integer","format":"int64","description":"Number of times the function was called","example":3,"minimum":0},"dataSize":{"type":"integer","format":"int64","description":"Function calldata size in bits","example":128,"minimum":0}}},"FourByteResponse":{"type":"object","required":["totalIdentifiers"],"properties":{"identifiers":{"type":"object","description":"List of four byte identifiers","additionalProperties":{"$ref":"#/components/schemas/FourByteInfo"},"propertyNames":{"type":"string"}},"totalIdentifiers":{"type":"integer","format":"int64","description":"Total number of four byte identifiers","example":3,"minimum":0}}},"HealthStatus":{"type":"object","required":["status","version","uptime","cache"],"properties":{"cache":{"$ref":"#/components/schemas/CacheHealth"},"status":{"type":"string"},"uptime":{"type":"integer","format":"int64","minimum":0},"version":{"type":"string"}}},"LogEntry":{"type":"object","description":"Base log entry structure used across different contexts.","required":["address","topics","data"],"properties":{"address":{"type":"string","description":"Contract address that emitted the log.","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"data":{"type":"string","description":"Log data (hex-encoded).","example":"0x00000000000000000000000000000000000000000000000000000000000f4240"},"topics":{"type":"array","items":{"type":"string"},"description":"Log topics."}}},"PrestateDefaultMode":{"type":"object","description":"Default prestate mode response.\nContains all account states necessary to execute the transaction.","additionalProperties":{"$ref":"#/components/schemas/AccountState","description":"Map of account addresses to their states"}},"PrestateDiffMode":{"type":"object","description":"Diff prestate mode response.\nContains the state changes caused by the transaction.","required":["pre","post"],"properties":{"post":{"type":"object","description":"Account states after the transaction","additionalProperties":{"$ref":"#/components/schemas/AccountState"},"propertyNames":{"type":"string"}},"pre":{"type":"object","description":"Account states before the transaction","additionalProperties":{"$ref":"#/components/schemas/AccountState"},"propertyNames":{"type":"string"}}}},"PrestateTraceResponse":{"oneOf":[{"$ref":"#/components/schemas/PrestateDefaultMode","description":"Default mode containing accounts touched during execution"},{"$ref":"#/components/schemas/PrestateDiffMode","description":"Diff mode containing state changes before and after execution"}],"description":"Prestate tracer response containing account states.\n\nThe prestate tracer has two modes:\n- Default mode: Returns accounts necessary to execute the transaction\n- Diff mode: Returns the differences between pre and post transaction states"},"PrestateTracerConfig":{"type":"object","properties":{"diffMode":{"type":"boolean","description":"Enable diff mode to show state changes.","default":false},"disableCode":{"type":"boolean","description":"Disable contract code in results.","default":false},"disableStorage":{"type":"boolean","description":"Disable storage tracking (not recommended).","default":false}}},"ResponseMetadata":{"type":"object","description":"Metadata included with every API response.","required":["requestId","timestamp"],"properties":{"executionTime":{"type":["integer","null"],"format":"int64","description":"Total processing time in milliseconds.","example":45,"minimum":0},"requestId":{"type":"string","description":"Unique identifier for request tracking and correlation.","example":"req_01234567-89ab-cdef-0123-456789abcdef"},"timestamp":{"type":"string","format":"date-time","description":"UTC timestamp when the response was generated."}}},"SimulationOptions":{"type":"object","description":"Optional parameters for simulation behavior and output.","properties":{"blockOverrides":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/BlockOverrides","description":"Block environment overrides.\nAllows modifying block parameters like timestamp, number, etc."}]},"stateOverrides":{"type":["array","null"],"items":{"$ref":"#/components/schemas/StateOverride"},"description":"State overrides to apply during simulation.\nAllows modifying account states before execution."}}},"SimulationParams":{"type":"object","description":"Core simulation parameters including transaction calls and context.","required":["calls"],"properties":{"account":{"type":["string","null"],"description":"Optional account address for tracking asset changes.\nRequired when `traceAssetChanges` or `traceTransfers` is enabled.","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c","pattern":"^0x[a-fA-F0-9]{40}$"},"blockNumber":{"type":["string","null"],"description":"Block number to simulate against (hex encoded).\nThis will be the PARENT block for the simulation.","example":"0x123abc","pattern":"^0x[a-fA-F0-9]+$"},"blockTag":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/BlockTag","description":"Block tag to use as the parent for simulation.\nMutually exclusive with `block_number`."}]},"calls":{"type":"array","items":{"$ref":"#/components/schemas/TransactionCall"},"description":"Array of transaction calls to simulate.\nEach call represents a transaction that will be executed in the simulation."},"traceAssetChanges":{"type":"boolean","description":"Enable tracking of ERC-20/ERC-721 token balance changes.\nRequires `account` parameter to be set.","example":false},"traceTransfers":{"type":"boolean","description":"Enable tracking of ETH transfers as ERC-20-like logs.\nETH transfers will appear with address 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.\nRequires `account` parameter to be set.","example":false},"validation":{"type":"boolean","description":"Enable or disable EVM validation during simulation.\nWhen false, behaves like `eth_call` with relaxed validation.","example":true}}},"SimulationRequest":{"type":"object","description":"Represents a complete simulation request for transaction execution.\n\nThis structure encapsulates all parameters needed to simulate a transaction\non the `HyperEVM` network, including the transaction details, block context,\nsimulation options, and any state or block overrides.","required":["params"],"properties":{"options":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/SimulationOptions","description":"Optional simulation-specific options."}]},"params":{"$ref":"#/components/schemas/SimulationParams","description":"The transaction parameters to simulate."}}},"SimulationResult":{"type":"object","description":"Complete simulation result containing all execution details.\n\nThis is the main response structure for transaction simulation,\ncontaining execution status, gas usage, logs, traces, and any errors.","required":["simulationId","blockNumber","status","calls","gasUsed","blockGasUsed"],"properties":{"assetChanges":{"type":["array","null"],"items":{"$ref":"#/components/schemas/AssetChange"},"description":"Token balance changes (if tracing enabled)."},"blockGasUsed":{"type":"string","description":"Total gas used in the simulated block.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"blockNumber":{"type":"string","description":"The final block number after simulation (higher than input if new blocks created).","example":"0x123abd","pattern":"^0x[a-fA-F0-9]+$"},"calls":{"type":"array","items":{"$ref":"#/components/schemas/CallResult"},"description":"Results for each transaction call in the simulation."},"gasUsed":{"type":"string","description":"Total gas consumed by all calls.","example":"0x5208","pattern":"^0x[a-fA-F0-9]+$"},"simulationId":{"type":"string","description":"Unique identifier for this simulation."},"status":{"$ref":"#/components/schemas/SimulationStatus","description":"Overall simulation execution status."}}},"SimulationStatus":{"type":"string","description":"Execution status for the overall simulation.","enum":["success","reverted","failed"],"example":"success"},"StateOverride":{"type":"object","description":"State override for simulation and tracing.","properties":{"address":{"type":["string","null"],"description":"Account address","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c"},"balance":{"type":["string","null"],"description":"Account balance override (hex-encoded wei).","example":"0x1e8480"},"code":{"type":["string","null"],"description":"Contract code override (hex-encoded).","example":"0x608060405234801561001057600080fd5b50"},"movePrecompileToAddress":{"type":["string","null"],"description":"Move precompile contract"},"nonce":{"type":["integer","null"],"format":"int64","description":"Account nonce override.","minimum":0},"state":{"type":["array","null"],"items":{"$ref":"#/components/schemas/StorageSlot"},"description":"Storage slots"},"stateDiff":{"type":["object","null"],"description":"Differential storage override (modifies specific slots).","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}},"storage":{"type":["object","null"],"description":"Complete storage override (replaces all storage).","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}}}},"StorageSlot":{"type":"object","description":"Storage slot definition for state overrides.","required":["slot","value"],"properties":{"slot":{"type":"string","description":"Storage slot key (32 bytes, hex-encoded).","example":"0x0000000000000000000000000000000000000000000000000000000000000001"},"value":{"type":"string","description":"Storage slot value (32 bytes, hex-encoded).","example":"0x0000000000000000000000000000000000000000000000000000000000000064"}}},"StructLog":{"type":"object","required":["pc","op","gas","gasCost","depth"],"properties":{"depth":{"type":"integer","format":"int64","description":"Current call depth","minimum":0},"error":{"type":["string","null"],"description":"Error message if any"},"gas":{"type":"integer","format":"int64","description":"remaining gas","minimum":0},"gasCost":{"type":"integer","format":"int64","description":"cost for executing op","minimum":0},"memSize":{"type":["integer","null"],"format":"int64","description":"Size of memory.","minimum":0},"memory":{"type":["array","null"],"items":{"type":"string"},"description":"ref <https://github.com/ethereum/go-ethereum/blob/366d2169fbc0e0f803b68c042b77b6b480836dbc/eth/tracers/logger/logger.go#L450-L452>"},"op":{"type":"string","description":"opcode to be executed"},"pc":{"type":"integer","format":"int64","description":"program counter","minimum":0},"refund":{"type":["integer","null"],"format":"int64","description":"Refund counter","minimum":0},"returnData":{"type":["string","null"],"description":"Last call's return data. Enabled via enableReturnData"},"stack":{"type":["array","null"],"items":{"type":"string"},"description":"EVM stack"},"storage":{"type":["object","null"],"description":"Storage slots of current contract read from and written to. Only emitted for SLOAD and\nSSTORE. Disabled via disableStorage","additionalProperties":{"type":"string"},"propertyNames":{"type":"string"}}}},"StructLogResponse":{"type":"object","description":"API response for the struct log tracer.\n\nThis is the default tracer and the most verbose one.\nIt's the most useful one for debugging.\n\nUse the [`StructLogResponse::clean`] method to clean the trace.","required":["totalOpcodes","totalGas"],"properties":{"error":{"type":["string","null"],"description":"Error message if any","example":"Transaction execution failed"},"output":{"type":["string","null"],"description":"Output of the transaction","example":"0x01"},"refundCounter":{"type":["integer","null"],"format":"int64","description":"Number of times the gas was refunded","minimum":0},"structLogs":{"type":["array","null"],"items":{"$ref":"#/components/schemas/StructLog"},"description":"Struct logs"},"totalGas":{"type":"integer","format":"int64","description":"Total gas used","minimum":0},"totalGasRefunded":{"type":["integer","null"],"format":"int64","description":"Total gas refunded","example":"0x1000","minimum":0},"totalOpcodes":{"type":"integer","format":"int64","description":"Total opcodes executed","minimum":0}}},"StructLoggerConfig":{"type":"object","properties":{"cleanStructLogs":{"type":"boolean","description":"Clean struct logs to reduce response size.","default":true},"disableMemory":{"type":"boolean","description":"Enable memory capture (disabled by default for performance).","default":true},"disableReturnData":{"type":"boolean","description":"Disable return data capture.","default":false},"disableStack":{"type":"boolean","description":"Disable stack capture.","default":false},"disableStorage":{"type":"boolean","description":"Disable storage capture.","default":false}}},"TokenInfo":{"type":"object","description":"Token contract information.","required":["address"],"properties":{"address":{"type":"string","description":"Token contract address.","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","pattern":"^0x[a-fA-F0-9]{40}$"},"decimals":{"type":["integer","null"],"format":"int32","description":"Number of decimal places (if available).","example":6,"minimum":0},"symbol":{"type":["string","null"],"description":"Token symbol (if available).","example":"USDC"}}},"TraceCallRequest":{"type":"object","description":"Request to trace a call simulation.","required":["call"],"properties":{"block":{"type":"string","description":"Block number or tag to trace against (default: \"latest\").","example":"latest"},"blockOverrides":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/BlockOverrides","description":"Block overrides to apply during tracing."}]},"call":{"$ref":"#/components/schemas/TransactionCall","description":"Transaction call to trace."},"stateOverrides":{"type":["object","null"],"description":"State overrides to apply during tracing.","additionalProperties":{"$ref":"#/components/schemas/StateOverride"},"propertyNames":{"type":"string"}},"tracerConfig":{"$ref":"#/components/schemas/TraceConfig","description":"Trace configuration options."}}},"TraceConfig":{"allOf":[{"oneOf":[{"$ref":"#/components/schemas/Tracers","description":"Tracers to use."}],"default":{"4byteTracer":false,"callTracer":{"onlyTopCall":false,"withLogs":true}}}],"title":"Trace Configuration","description":"Comprehensive trace configuration supporting multiple tracers"},"TraceTransactionRequest":{"type":"object","description":"Request to trace a transaction by hash.","required":["transactionHash"],"properties":{"tracerConfig":{"$ref":"#/components/schemas/TraceConfig","description":"Trace configuration options."},"transactionHash":{"type":"string","description":"Transaction hash to trace.","example":"0xbc4a51bbcbe7550446c151d0d53ee14d5318188e2af1726e28a481b075fc7b4c","pattern":"0x[0-9a-fA-F]{64}"}},"example":{"returnReceipt":false,"tracerConfig":{"4byteTracer":true,"callTracer":{"onlyTopCall":false,"withLogs":true},"prestateTracer":{"diffMode":true,"disableCode":false,"disableStorage":false},"structLogger":{"cleanStructLogs":true,"disableMemory":true,"disableReturnData":false,"disableStack":false,"disableStorage":false}},"transactionHash":"0xbc4a51bbcbe7550446c151d0d53ee14d5318188e2af1726e28a481b075fc7b4c"}},"TracerResponse":{"type":"object","description":"Container for all tracer results.","properties":{"4byteTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/FourByteResponse","description":"Four byte tracer results."}]},"callTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/CallTraceResponse","description":"Call tracer results."}]},"prestateTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/PrestateTraceResponse","description":"Prestate tracer results."}]},"receipt":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/TransactionReceiptInfo","description":"The transaction receipt."}]},"structLogger":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/StructLogResponse","description":"Struct logger results."}]}}},"Tracers":{"type":"object","properties":{"4byteTracer":{"type":"boolean","description":"The 4byteTracer collects the function selectors of every function executed in the lifetime\nof a transaction, along with the size of the supplied call data. The result is a\n[`FourByteFrame`](alloy_rpc_types_trace::geth::four_byte::FourByteFrame) where the keys are\n`SELECTOR-CALLDATASIZE` and the values are number of occurrences of this key."},"callTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/CallTracerConfig","description":"The callTracer tracks all the call frames executed during a transaction, including depth 0.\nThe result will be a nested list of call frames, resembling how EVM works. They form a tree\nwith the top-level call at root and sub-calls as children of the higher levels."}]},"prestateTracer":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/PrestateTracerConfig","description":"The prestate tracer operates in two distinct modes: prestate and diff.\n- In prestate mode, it retrieves the accounts required for executing a specified\n  transaction.\n- In diff mode, it identifies the changes between the transaction's initial and final\n  states, detailing the modifications caused by the transaction.\n\nBy default, the prestateTracer is set to prestate mode. It reexecutes the given transaction\nand tracks every part of state that is accessed."}]},"structLogger":{"oneOf":[{"type":"null"},{"$ref":"#/components/schemas/StructLoggerConfig","description":"This is the default tracer. It logs the execution of the transaction in the\n[`StructLog`](alloy_rpc_types_trace::geth::StructLog) format."}]}}},"TransactionCall":{"type":"object","description":"Represents a single transaction call within a simulation.","properties":{"data":{"type":["string","null"],"description":"The transaction data (calldata).\nFor simple ETH transfers, this can be empty or \"0x\".","example":"0xa9059cbb000000000000000000000000","pattern":"^0x[a-fA-F0-9]*$"},"from":{"type":["string","null"],"description":"The sender address of the transaction.\nIf not specified, the zero address will be used.","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c","pattern":"^0x[a-fA-F0-9]{40}$"},"gas":{"type":["string","null"],"description":"Gas limit for the transaction (hex encoded).\nIf not specified, it will be estimated automatically.","example":"0x7a120","pattern":"^0x[a-fA-F0-9]*$"},"to":{"type":["string","null"],"description":"The recipient address of the transaction.\nFor contract creation, this should be None/null.","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","pattern":"^0x[a-fA-F0-9]{40}$"},"value":{"type":["string","null"],"description":"The value to send with the transaction in wei (hex encoded).","example":"0x0","pattern":"^0x[a-fA-F0-9]*$"}}},"TransactionReceiptInfo":{"type":"object","description":"Transaction receipt information.","required":["from","gasUsed","effectiveGasPrice","cumulativeGasUsed","transactionType","status","logsBloom","logsCount"],"properties":{"contractAddress":{"type":["string","null"],"description":"Contract address (if contract creation).","example":"0x1234567890abcdef1234567890abcdef1234567890"},"cumulativeGasUsed":{"type":"string","description":"Cumulative gas used in the block at the time of the transaction.","example":"0x7a120"},"effectiveGasPrice":{"type":"string","description":"Effective gas price (hex-encoded wei).","example":"0x3b9aca00"},"from":{"type":"string","description":"Sender address.","example":"0x742d35Cc6634C0532925a3b844Bc9e7595f06e8c"},"gasUsed":{"type":"string","description":"Gas used by the transaction.","example":"0x5208"},"logsBloom":{"type":"string","description":"Logs bloom filter.","example":"0x},"logsCount":{"type":"integer","format":"int64","description":"Number of logs emitted.","example":2,"minimum":0},"status":{"type":"boolean","description":"Transaction status.","example":true},"to":{"type":["string","null"],"description":"Recipient address (None for contract creation).","example":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"},"transactionType":{"type":"integer","format":"int32","description":"Transaction type (0 for legacy, 1 for EIP-2930, 2 for EIP-1559).","example":2,"minimum":0}}}}},"tags":[{"name":"health","description":"Health endpoints for checking the health of the API"},{"name":"simulation","description":"HyperEVM transaction simulation endpoints"},{"name":"trace","description":"HyperEVM transaction trace endpoints"}]}