stages:
  - lint
  - build-sdk
  - build-frontend
  - test
  - dummy
  - success

variables:
  RUST_IMAGE: rust:1.88-slim
  NODE_VERSION: "20"
  CARGO_TERM_COLOR: always
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  CARGO_TARGET_DIR: $CI_PROJECT_DIR/target
  BUILD_DEPENDENCIES: "build-essential cmake perl make pkg-config clang libclang-dev pkg-config libssl-dev curl git"
  GIT_STRATEGY: clone
  GIT_DEPTH: 1
  GIT_CLEAN_FLAGS: none

# Cache configuration with expiration
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/.cache
    - node_modules/.bun
    - target/debug/.fingerprint
    - target/debug/build
    - target/debug/deps
    - target/debug/examples
    - target/debug/incremental
    - .cargo/registry/index
    - .cargo/registry/cache
  policy: pull-push
  when: on_success
  untracked: true

# Default rules for jobs
.default-rules:
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: always
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
  interruptible: true
  timeout: 30m

dummy:
  stage: dummy
  script:
    - echo "Dummy job"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Cleanup job
cleanup:
  stage: .post
  script:
    - |
      echo "Cleaning up workspace..."
      rm -rf node_modules target .cargo dist
  when: always
  allow_failure: true

# node jobs
build-sdk:
  stage: build-sdk
  image: oven/bun:alpine
  before_script:
    - cd packages/sdk && bun install
  script:
    - bun run build
  artifacts:
    paths:
      - packages/sdk/dist/
    expire_in: 1 hour
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes: [packages/sdk/**/*, .gitlab-ci.yml]
    - if: $CI_COMMIT_BRANCH == "main"
      changes: [packages/sdk/**/*, .gitlab-ci.yml]
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths: [node_modules/, .cache/]
    policy: pull-push
    when: on_success

build-frontend:
  stage: build-frontend
  image: oven/bun:alpine
  needs:
    - build-sdk
  before_script:
    - cd packages/frontend && bun install
    - mkdir -p node_modules/@altitrace
    - ln -sf ../../sdk node_modules/@altitrace/sdk
  script:
    - bun run build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes: [packages/frontend/**/*, .gitlab-ci.yml]
    - if: $CI_COMMIT_BRANCH == "main"
      changes: [packages/frontend/**/*, .gitlab-ci.yml]
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths: [node_modules/, .cache/]
    policy: pull-push
    when: on_success

# rust jobs
clippy:
  stage: lint
  image: $RUST_IMAGE
  extends: [.default-rules]
  before_script:
    - apt-get update && apt-get install -y $BUILD_DEPENDENCIES
    - rustup update
    - rustup component add clippy rustfmt
  script:
    - RUSTFLAGS="-D warnings" cargo clippy --workspace --all-targets --all-features
  cache:
    key: ${CI_COMMIT_REF_SLUG}-rust
    paths: [target/, .cargo/]
    policy: pull-push
    when: on_success
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]

fmt:
  stage: lint
  image: $RUST_IMAGE
  before_script:
    - apt-get update && apt-get install -y $BUILD_DEPENDENCIES
    - rustup update
    - rustup component add rustfmt
  script:
    - cargo fmt --all --check
  cache:
    key: ${CI_COMMIT_REF_SLUG}-rust
    paths: [target/, .cargo/]
    policy: pull
    when: on_success
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]

test:
  stage: test
  image: $RUST_IMAGE
  before_script:
    - apt-get update && apt-get install -y $BUILD_DEPENDENCIES
    - curl -L https://foundry.paradigm.xyz | bash
    - export PATH="$HOME/.foundry/bin:$PATH"
    - foundryup
    - rustup update
    - rustup component add clippy rustfmt
  script:
    - cargo test --workspace --all-features
  cache:
    key: ${CI_COMMIT_REF_SLUG}-rust
    paths: [target/, .cargo/]
    policy: pull
    when: on_success
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        [
          packages/api/**/*,
          Cargo.toml,
          Cargo.lock,
          rustfmt.toml,
          .gitlab-ci.yml,
        ]
